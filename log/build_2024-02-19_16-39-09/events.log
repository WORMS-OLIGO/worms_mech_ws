[0.000000] (-) TimerEvent: {}
[0.002088] (-) JobUnselected: {'identifier': 'worms_mech'}
[0.002802] (image_tools) JobQueued: {'identifier': 'image_tools', 'dependencies': OrderedDict()}
[0.005079] (image_tools) JobStarted: {'identifier': 'image_tools'}
[0.054766] (image_tools) JobProgress: {'identifier': 'image_tools', 'progress': 'cmake'}
[0.058152] (image_tools) JobProgress: {'identifier': 'image_tools', 'progress': 'build'}
[0.061318] (image_tools) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/worm6/worms_mech_ws/build/image_tools', '--', '-j4', '-l4'], 'cwd': '/home/worm6/worms_mech_ws/build/image_tools', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'worm6'), ('SSH_CLIENT', '192.168.42.215 57329 22'), ('XDG_SESSION_TYPE', 'tty'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/worm6/worms_mech_ws/install/image_tools/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/aarch64-linux-gnu:/opt/ros/humble/lib'), ('MOTD_SHOWN', 'pam'), ('HOME', '/home/worm6'), ('OLDPWD', '/home/worm6'), ('SSH_TTY', '/dev/pts/0'), ('ROS_PYTHON_VERSION', '3'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLCON_PREFIX_PATH', '/home/worm6/worms_mech_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'worm6'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '2'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('LANG', 'en_US.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('ROS_DOMAIN_ID', '5'), ('AMENT_PREFIX_PATH', '/home/worm6/worms_mech_ws/install/image_tools:/home/worm6/worms_mech_ws/install/worms_mech:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('PWD', '/home/worm6/worms_mech_ws/build/image_tools'), ('SSH_CONNECTION', '192.168.42.215 57329 192.168.42.106 22'), ('XDG_DATA_DIRS', '/usr/share/gnome:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/worm6/worms_mech_ws/install/worms_mech/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/worm6/worms_mech_ws/install/image_tools:/home/worm6/worms_mech_ws/install/worms_mech:/opt/ros/humble')]), 'shell': False}
[0.098402] (-) TimerEvent: {}
[0.200658] (-) TimerEvent: {}
[0.277028] (image_tools) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target image_tools\x1b[0m\n'}
[0.300906] (-) TimerEvent: {}
[0.337929] (image_tools) StdoutLine: {'line': b'[ 22%] Built target cam2image\n'}
[0.345243] (image_tools) StdoutLine: {'line': b'[ 44%] Built target showimage\n'}
[0.399186] (image_tools) StdoutLine: {'line': b'[ 55%] \x1b[32mBuilding CXX object CMakeFiles/image_tools.dir/src/cam2image.cpp.o\x1b[0m\n'}
[0.401133] (-) TimerEvent: {}
[0.501949] (-) TimerEvent: {}
[0.602766] (-) TimerEvent: {}
[0.703662] (-) TimerEvent: {}
[0.804310] (-) TimerEvent: {}
[0.905074] (-) TimerEvent: {}
[1.006010] (-) TimerEvent: {}
[1.106716] (-) TimerEvent: {}
[1.207649] (-) TimerEvent: {}
[1.308747] (-) TimerEvent: {}
[1.409509] (-) TimerEvent: {}
[1.510274] (-) TimerEvent: {}
[1.610996] (-) TimerEvent: {}
[1.711699] (-) TimerEvent: {}
[1.812346] (-) TimerEvent: {}
[1.913045] (-) TimerEvent: {}
[2.013780] (-) TimerEvent: {}
[2.114483] (-) TimerEvent: {}
[2.215448] (-) TimerEvent: {}
[2.316722] (-) TimerEvent: {}
[2.417921] (-) TimerEvent: {}
[2.518724] (-) TimerEvent: {}
[2.619458] (-) TimerEvent: {}
[2.720214] (-) TimerEvent: {}
[2.821388] (-) TimerEvent: {}
[2.922623] (-) TimerEvent: {}
[3.023403] (-) TimerEvent: {}
[3.124209] (-) TimerEvent: {}
[3.224963] (-) TimerEvent: {}
[3.325707] (-) TimerEvent: {}
[3.426462] (-) TimerEvent: {}
[3.527361] (-) TimerEvent: {}
[3.628964] (-) TimerEvent: {}
[3.730053] (-) TimerEvent: {}
[3.831263] (-) TimerEvent: {}
[3.932376] (-) TimerEvent: {}
[4.033498] (-) TimerEvent: {}
[4.134621] (-) TimerEvent: {}
[4.235556] (-) TimerEvent: {}
[4.336282] (-) TimerEvent: {}
[4.437310] (-) TimerEvent: {}
[4.538192] (-) TimerEvent: {}
[4.639075] (-) TimerEvent: {}
[4.740026] (-) TimerEvent: {}
[4.841360] (-) TimerEvent: {}
[4.942099] (-) TimerEvent: {}
[5.043266] (-) TimerEvent: {}
[5.144056] (-) TimerEvent: {}
[5.245024] (-) TimerEvent: {}
[5.346169] (-) TimerEvent: {}
[5.447230] (-) TimerEvent: {}
[5.548597] (-) TimerEvent: {}
[5.649806] (-) TimerEvent: {}
[5.751008] (-) TimerEvent: {}
[5.852210] (-) TimerEvent: {}
[5.953527] (-) TimerEvent: {}
[6.055016] (-) TimerEvent: {}
[6.156037] (-) TimerEvent: {}
[6.257118] (-) TimerEvent: {}
[6.358311] (-) TimerEvent: {}
[6.459455] (-) TimerEvent: {}
[6.561329] (-) TimerEvent: {}
[6.662603] (-) TimerEvent: {}
[6.764094] (-) TimerEvent: {}
[6.865330] (-) TimerEvent: {}
[6.966271] (-) TimerEvent: {}
[7.067070] (-) TimerEvent: {}
[7.168073] (-) TimerEvent: {}
[7.269621] (-) TimerEvent: {}
[7.370395] (-) TimerEvent: {}
[7.471246] (-) TimerEvent: {}
[7.572151] (-) TimerEvent: {}
[7.672943] (-) TimerEvent: {}
[7.773816] (-) TimerEvent: {}
[7.874733] (-) TimerEvent: {}
[7.975892] (-) TimerEvent: {}
[8.076788] (-) TimerEvent: {}
[8.177622] (-) TimerEvent: {}
[8.278375] (-) TimerEvent: {}
[8.379228] (-) TimerEvent: {}
[8.479978] (-) TimerEvent: {}
[8.580783] (-) TimerEvent: {}
[8.681650] (-) TimerEvent: {}
[8.782479] (-) TimerEvent: {}
[8.883245] (-) TimerEvent: {}
[8.984038] (-) TimerEvent: {}
[9.084919] (-) TimerEvent: {}
[9.186022] (-) TimerEvent: {}
[9.286815] (-) TimerEvent: {}
[9.387622] (-) TimerEvent: {}
[9.488381] (-) TimerEvent: {}
[9.589104] (-) TimerEvent: {}
[9.689927] (-) TimerEvent: {}
[9.790822] (-) TimerEvent: {}
[9.892404] (-) TimerEvent: {}
[9.993545] (-) TimerEvent: {}
[10.095712] (-) TimerEvent: {}
[10.196581] (-) TimerEvent: {}
[10.297378] (-) TimerEvent: {}
[10.398117] (-) TimerEvent: {}
[10.499027] (-) TimerEvent: {}
[10.599910] (-) TimerEvent: {}
[10.700697] (-) TimerEvent: {}
[10.801472] (-) TimerEvent: {}
[10.902253] (-) TimerEvent: {}
[11.003247] (-) TimerEvent: {}
[11.104438] (-) TimerEvent: {}
[11.205429] (-) TimerEvent: {}
[11.306437] (-) TimerEvent: {}
[11.407730] (-) TimerEvent: {}
[11.508612] (-) TimerEvent: {}
[11.609656] (-) TimerEvent: {}
[11.710787] (-) TimerEvent: {}
[11.811695] (-) TimerEvent: {}
[11.912509] (-) TimerEvent: {}
[12.013374] (-) TimerEvent: {}
[12.114210] (-) TimerEvent: {}
[12.215081] (-) TimerEvent: {}
[12.315963] (-) TimerEvent: {}
[12.416956] (-) TimerEvent: {}
[12.518221] (-) TimerEvent: {}
[12.619081] (-) TimerEvent: {}
[12.719941] (-) TimerEvent: {}
[12.820697] (-) TimerEvent: {}
[12.921525] (-) TimerEvent: {}
[13.022309] (-) TimerEvent: {}
[13.123068] (-) TimerEvent: {}
[13.223802] (-) TimerEvent: {}
[13.324679] (-) TimerEvent: {}
[13.425494] (-) TimerEvent: {}
[13.526338] (-) TimerEvent: {}
[13.627203] (-) TimerEvent: {}
[13.728090] (-) TimerEvent: {}
[13.828940] (-) TimerEvent: {}
[13.929780] (-) TimerEvent: {}
[14.030728] (-) TimerEvent: {}
[14.131597] (-) TimerEvent: {}
[14.232571] (-) TimerEvent: {}
[14.333468] (-) TimerEvent: {}
[14.344462] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid image_tools::Cam2Image::initialize()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[14.345402] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:90:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::BoolConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[14.345940] (image_tools) StderrLine: {'line': b'   90 |     auto camera_callback = [this](\x1b[01;31m\x1b[Kstd_msgs\x1b[m\x1b[K::msg::BoolConstSharedPtr msg) -> void\n'}
[14.346435] (image_tools) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[14.346885] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:\x1b[m\x1b[K In lambda function:\n'}
[14.347614] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:92:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 is not a pointer\n'}
[14.348138] (image_tools) StderrLine: {'line': b'   92 |         this->is_active_ = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata;\n'}
[14.348628] (image_tools) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[14.433669] (-) TimerEvent: {}
[14.535004] (-) TimerEvent: {}
[14.636259] (-) TimerEvent: {}
[14.737530] (-) TimerEvent: {}
[14.838467] (-) TimerEvent: {}
[14.939464] (-) TimerEvent: {}
[15.040251] (-) TimerEvent: {}
[15.150088] (-) TimerEvent: {}
[15.250962] (-) TimerEvent: {}
[15.351802] (-) TimerEvent: {}
[15.452986] (-) TimerEvent: {}
[15.554444] (-) TimerEvent: {}
[15.655599] (-) TimerEvent: {}
[15.756383] (-) TimerEvent: {}
[15.858139] (-) TimerEvent: {}
[15.959182] (-) TimerEvent: {}
[16.060033] (-) TimerEvent: {}
[16.160880] (-) TimerEvent: {}
[16.261741] (-) TimerEvent: {}
[16.362596] (-) TimerEvent: {}
[16.463590] (-) TimerEvent: {}
[16.564432] (-) TimerEvent: {}
[16.665327] (-) TimerEvent: {}
[16.766105] (-) TimerEvent: {}
[16.866950] (-) TimerEvent: {}
[16.967762] (-) TimerEvent: {}
[17.068547] (-) TimerEvent: {}
[17.169392] (-) TimerEvent: {}
[17.270208] (-) TimerEvent: {}
[17.371103] (-) TimerEvent: {}
[17.471980] (-) TimerEvent: {}
[17.574884] (-) TimerEvent: {}
[17.606858] (image_tools) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[17.608016] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[17.612842] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[17.613638] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[17.614416] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[17.615343] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[17.616312] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[17.617225] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[17.618000] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[17.618744] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[17.619493] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:28\x1b[m\x1b[K:\n'}
[17.620243] (image_tools) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>; MessageT = std_msgs::msg::Bool_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.620950] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.621624] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.622347] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.623371] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.624147] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:97:52:\x1b[m\x1b[K   required from here\n'}
[17.624894] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Bool_<std::allocator<void> >, image_tools::Cam2Image::initialize()::<lambda(int)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(int)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[17.626097] (image_tools) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[17.626738] (image_tools) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.627458] (image_tools) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[17.628140] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:23\x1b[m\x1b[K,\n'}
[17.628787] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[17.629526] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[17.630224] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[17.631181] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[17.631952] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[17.633182] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[17.633970] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[17.634705] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[17.635507] (image_tools) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:28\x1b[m\x1b[K:\n'}
[17.636255] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.637364] (image_tools) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[17.638082] (image_tools) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[17.638782] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[17.639926] (image_tools) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(int)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.641051] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(int)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.642531] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>; MessageT = std_msgs::msg::Bool_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.643357] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.644259] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.645218] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.646041] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.646804] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:97:52:\x1b[m\x1b[K   required from here\n'}
[17.647674] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.648756] (image_tools) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[17.649579] (image_tools) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.650325] (image_tools) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>; MessageT = std_msgs::msg::Bool_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.651141] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.652091] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.652857] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.653684] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = image_tools::Cam2Image::initialize()::<lambda(int)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.654517] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/home/worm6/worms_mech_ws/src/image_tools/src/cam2image.cpp:97:52:\x1b[m\x1b[K   required from here\n'}
[17.655404] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.656349] (image_tools) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[17.657070] (image_tools) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[17.657724] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Bool_<std::allocator<void> >, image_tools::Cam2Image::initialize()::<lambda(int)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(int)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.658749] (image_tools) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[17.659524] (image_tools) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.660291] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.661273] (image_tools) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[17.662002] (image_tools) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[17.662706] (image_tools) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Bool_<std::allocator<void> >, image_tools::Cam2Image::initialize()::<lambda(int)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(int)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.664002] (image_tools) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[17.664806] (image_tools) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[17.675116] (-) TimerEvent: {}
[17.775973] (-) TimerEvent: {}
[17.877319] (-) TimerEvent: {}
[17.978217] (-) TimerEvent: {}
[18.079033] (-) TimerEvent: {}
[18.179808] (-) TimerEvent: {}
[18.280663] (-) TimerEvent: {}
[18.381923] (-) TimerEvent: {}
[18.483098] (-) TimerEvent: {}
[18.584412] (-) TimerEvent: {}
[18.685582] (-) TimerEvent: {}
[18.786965] (-) TimerEvent: {}
[18.888268] (-) TimerEvent: {}
[18.989457] (-) TimerEvent: {}
[19.090288] (-) TimerEvent: {}
[19.191098] (-) TimerEvent: {}
[19.292072] (-) TimerEvent: {}
[19.393608] (-) TimerEvent: {}
[19.495167] (-) TimerEvent: {}
[19.596394] (-) TimerEvent: {}
[19.697666] (-) TimerEvent: {}
[19.798666] (-) TimerEvent: {}
[19.899909] (-) TimerEvent: {}
[20.000674] (-) TimerEvent: {}
[20.101408] (-) TimerEvent: {}
[20.202184] (-) TimerEvent: {}
[20.302996] (-) TimerEvent: {}
[20.403776] (-) TimerEvent: {}
[20.504555] (-) TimerEvent: {}
[20.605297] (-) TimerEvent: {}
[20.706101] (-) TimerEvent: {}
[20.806872] (-) TimerEvent: {}
[20.907731] (-) TimerEvent: {}
[21.008489] (-) TimerEvent: {}
[21.109352] (-) TimerEvent: {}
[21.210429] (-) TimerEvent: {}
[21.311346] (-) TimerEvent: {}
[21.412271] (-) TimerEvent: {}
[21.513072] (-) TimerEvent: {}
[21.613931] (-) TimerEvent: {}
[21.714686] (-) TimerEvent: {}
[21.815518] (-) TimerEvent: {}
[21.916292] (-) TimerEvent: {}
[22.017143] (-) TimerEvent: {}
[22.118097] (-) TimerEvent: {}
[22.219058] (-) TimerEvent: {}
[22.320113] (-) TimerEvent: {}
[22.421126] (-) TimerEvent: {}
[22.522012] (-) TimerEvent: {}
[22.623012] (-) TimerEvent: {}
[22.724403] (-) TimerEvent: {}
[22.825469] (-) TimerEvent: {}
[22.926261] (-) TimerEvent: {}
[23.027087] (-) TimerEvent: {}
[23.127909] (-) TimerEvent: {}
[23.228983] (-) TimerEvent: {}
[23.329878] (-) TimerEvent: {}
[23.430743] (-) TimerEvent: {}
[23.531995] (-) TimerEvent: {}
[23.632768] (-) TimerEvent: {}
[23.733550] (-) TimerEvent: {}
[23.834303] (-) TimerEvent: {}
[23.935089] (-) TimerEvent: {}
[24.036087] (-) TimerEvent: {}
[24.136878] (-) TimerEvent: {}
[24.237713] (-) TimerEvent: {}
[24.338539] (-) TimerEvent: {}
[24.439415] (-) TimerEvent: {}
[24.540237] (-) TimerEvent: {}
[24.641124] (-) TimerEvent: {}
[24.742225] (-) TimerEvent: {}
[24.843120] (-) TimerEvent: {}
[24.944266] (-) TimerEvent: {}
[25.039585] (image_tools) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/image_tools.dir/build.make:90: CMakeFiles/image_tools.dir/src/cam2image.cpp.o] Error 1\n'}
[25.040628] (image_tools) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:141: CMakeFiles/image_tools.dir/all] Error 2\n'}
[25.041586] (image_tools) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[25.044457] (-) TimerEvent: {}
[25.047770] (image_tools) CommandEnded: {'returncode': 2}
[25.144679] (-) TimerEvent: {}
[25.246364] (-) TimerEvent: {}
[25.347808] (-) TimerEvent: {}
[25.397241] (image_tools) JobEnded: {'identifier': 'image_tools', 'rc': 2}
[25.409162] (-) EventReactorShutdown: {}
